---
// Custom language switcher component with automatic language detection
// Features:
// - Auto-detects user's browser language on first visit
// - Chinese users (zh-*) are automatically redirected to /zh-cn/
// - Other languages default to English at root path "/"
// - Manual switching between English (/) and Chinese (/zh-cn/)
// - Hidden on mobile devices (users rely on auto-detection only)
// - Prevents redirect loops and maintains proper locale routing
---

<div class="language-switcher">
  <select id="language-select" aria-label="Select language">
    <option value="en">English</option>
    <option value="zh-cn">简体中文</option>
    <!-- 
      Steps to add a new language:
      1. Add <option value="lang-code">Language Name</option> here
      2. Configure the corresponding locale in astro.config.mjs
      3. Add the language code to supportedLanguages array in JavaScript below
      4. Add corresponding handling logic in the switch statement
      
      Examples:
      <option value="fr">Français</option>
      <option value="es">Español</option>
      <option value="ja">日本語</option>
      
      Notes: 
      - Auto-detection only supports Chinese (zh-*), other languages require manual switching
      - New languages need corresponding content translation and routing configuration
      - Mobile users rely on auto-detection and cannot see the manual switcher
    -->
  </select>
</div>

<style>
  .language-switcher {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  #language-select {
    /* Use Starlight's native style variables for consistent theming */
    background: var(--sl-color-gray-6);
    border: 1px solid var(--sl-color-gray-5);
    border-radius: 0.375rem;
    color: var(--sl-color-text);
    font-size: 0.875rem;
    font-family: var(--sl-font);
    padding: 0.375rem 0.75rem;
    cursor: pointer;
    min-width: 120px;
    transition: all 0.2s ease;
    
    /* Custom dropdown arrow styling */
    appearance: none;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 0.75rem center;
    background-repeat: no-repeat;
    background-size: 1rem;
    padding-right: 2.5rem;
  }
  
  #language-select:hover {
    border-color: var(--sl-color-accent);
    background-color: var(--sl-color-gray-5);
  }
  
  #language-select:focus {
    outline: 2px solid var(--sl-color-accent);
    outline-offset: -2px;
    border-color: var(--sl-color-accent);
  }
  
  /* Adapt to dark theme */
  [data-theme="dark"] #language-select {
    background-color: var(--sl-color-gray-6);
    border-color: var(--sl-color-gray-4);
  }
  
  [data-theme="dark"] #language-select:hover {
    background-color: var(--sl-color-gray-5);
    border-color: var(--sl-color-accent);
  }
  
  /* Responsive design - hide on mobile devices, mobile users use auto-detection */
  @media (max-width: 50rem) {
    .language-switcher {
      display: none !important;
    }
  }
  
  /* Extra small screens - also hide to maintain clean mobile experience */
  @media (max-width: 30rem) {
    .language-switcher {
      display: none !important;
    }
  }
  
  /* Display only on desktop - mobile users get automatic language detection */
  .language-switcher {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
</style>

<script>
  function initLanguageSwitcher() {
    const select = document.getElementById('language-select');
    if (!select || !(select instanceof HTMLSelectElement)) return;

    // Auto-detect user's preferred language on first visit to homepage
    const currentPath = window.location.pathname;
    let hasVisited = localStorage.getItem('splashkit-language-preference');
    
    // Clear invalid localStorage values that might cause redirect loops
    if (hasVisited === 'en' && currentPath.startsWith('/en')) {
      console.log('Clearing invalid localStorage value to prevent redirect loop');
      localStorage.removeItem('splashkit-language-preference');
      hasVisited = null;
    }
    
    console.log('Language switcher initializing:', { currentPath, hasVisited });
    
    // IMPORTANT: Only do auto-detection if user is on the root homepage AND hasn't visited before
    if (!hasVisited && currentPath === '/') {
      // First visit to homepage - detect browser language
      const browserLang = navigator.language || navigator.languages?.[0] || 'en';
      const langCode = browserLang.toLowerCase();
      
      console.log('Auto-detecting language:', browserLang);
      
      // Define supported Chinese language variants (add new Chinese variants here)
      const supportedLanguages = ['zh-cn', 'zh-tw', 'zh-hk', 'zh-sg'];
      
      if (langCode.startsWith('zh')) {
        // Chinese language detected - redirect to Chinese version
        console.log('Redirecting to Chinese version');
        localStorage.setItem('splashkit-language-preference', 'zh-cn');
        window.location.pathname = '/zh-cn/';
        return;
      } else {
        // All other languages (including unsupported ones) default to English
        // This includes: en, fr, es, de, ja, ko, etc.
        localStorage.setItem('splashkit-language-preference', 'en');
        console.log(`Browser language "${browserLang}" detected. Defaulting to English as it's not currently supported.`);
        // DO NOT redirect - stay on current page
      }
    }

    // Set the currently selected language based on the current path
    // IMPORTANT: This should NOT cause any redirects, only set the dropdown value
    if (currentPath.startsWith('/zh-cn/')) {
      select.value = 'zh-cn';
      localStorage.setItem('splashkit-language-preference', 'zh-cn');
    } else {
      // For any other path (including /api/, /guides/, etc.), assume English
      select.value = 'en';
      localStorage.setItem('splashkit-language-preference', 'en');
    }

    console.log('Language switcher initialized with value:', select.value);

    // Listen for language switching events
    select.addEventListener('change', function(e) {
      const target = e.target;
      if (!target || !(target instanceof HTMLSelectElement)) return;
      const selectedLang = target.value;
      const currentPath = window.location.pathname;
      
      console.log('Language switching to:', selectedLang, 'from path:', currentPath);
      
      // Save user preference
      localStorage.setItem('splashkit-language-preference', selectedLang);
      
      if (selectedLang === 'en') {
        // Switch to English: always redirect to root path
        if (currentPath.startsWith('/zh-cn/')) {
          // Switch from Chinese page to corresponding English page
          const pathWithoutLocale = currentPath.replace(/^\/zh-cn/, '') || '/';
          console.log('Redirecting from Chinese to English:', pathWithoutLocale);
          window.location.pathname = pathWithoutLocale;
        } else {
          // Already on English page or other path, redirect to homepage
          console.log('Redirecting to English homepage');
          window.location.pathname = '/';
        }
      } else if (selectedLang === 'zh-cn') {
        // Switch to Chinese
        if (currentPath.startsWith('/zh-cn/')) {
          // Already on Chinese page, do nothing
          return;
        } else {
          // Switch from English page to corresponding Chinese page
          // Ensure we don't double up the locale prefix
          let targetPath = currentPath;
          
          // Remove any existing locale prefix first
          targetPath = targetPath.replace(/^\/(en|zh-cn)\//, '/');
          
          // Add Chinese prefix
          const chinesePath = targetPath === '/' ? '/zh-cn/' : `/zh-cn${targetPath}`;
          window.location.pathname = chinesePath;
        }
      } else {
        // Handle unsupported languages - fallback to English
        console.warn(`Language "${selectedLang}" is not currently supported. Redirecting to English.`);
        localStorage.setItem('splashkit-language-preference', 'en');
        select.value = 'en'; // Reset the selector to English
        
        // Redirect to English version (always root path)
        if (currentPath.startsWith('/zh-cn/')) {
          const pathWithoutLocale = currentPath.replace(/^\/zh-cn/, '') || '/';
          window.location.pathname = pathWithoutLocale;
        } else if (currentPath.startsWith('/en/')) {
          const pathWithoutLocale = currentPath.replace(/^\/en/, '') || '/';
          window.location.pathname = pathWithoutLocale;
        } else {
          // Already on English root, stay here
          window.location.pathname = '/';
        }
      }
      
      // Note: Any additional languages should be added as specific cases above.
      // Unsupported languages will automatically fallback to English.
    });
  }

  // Initialize the language switcher after the page loads
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initLanguageSwitcher);
  } else {
    initLanguageSwitcher();
  }
</script>